name: Continuous Integration

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
  workflow_dispatch:
  workflow_call:
    inputs:
      min:
        description: Minimum PHP version
        required: false
        default: "8.0"
        type: string
      current_stable:
        description: Current stable PHP version
        required: false
        default: "8.2"
        type: string
      script:
        description: Additional scripts to run
        required: false
        type: string

env:
  COMPOSER_FLAGS: "--ansi --no-interaction --no-progress --prefer-dist"
  COMPOSER_UPDATE_FLAGS: ""

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      php-versions: ${{ steps.determine-php-versions.outputs.php-versions }}
    steps:
      - name: Determine PHP Versions
        id: determine-php-versions
        run: |
          #!/bin/bash
          AVAILABLE_VERSIONS=("7.2" "7.3" "7.4" "8.0" "8.1")
          MIN_VERSION="${{ inputs.min }}"
          CURRENT_STABLE="${{ inputs.current_stable }}"
          SELECTED_VERSIONS=()
          for version in "${AVAILABLE_VERSIONS[@]}"; do
            if [[ "$version" == "$MIN_VERSION" || "$version" > "$MIN_VERSION" ]] && \
               [[ "$version" == "$CURRENT_STABLE" || "$version" < "$CURRENT_STABLE" ]]; then
              SELECTED_VERSIONS+=("$version")
            fi
          done
          echo "::set-output name=php-versions::[${SELECTED_VERSIONS[@]}]"

  phpunit:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ${{ fromJson(needs.setup.outputs.php-versions) }}
        dependencies: [highest, lowest]
        os: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: pcov
          ini-values: zend.assertions=1

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Update dependencies
        run: |
          if [ "${{ matrix.dependencies }}" == "lowest" ]; then
            composer update --prefer-lowest ${{ env.COMPOSER_FLAGS }} ${{ env.COMPOSER_UPDATE_FLAGS }}
          else
            composer update ${{ env.COMPOSER_FLAGS }} ${{ env.COMPOSER_UPDATE_FLAGS }}
          fi

      - name: Run PHPUnit tests
        run: ./vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml

      - name: Run additional script
        if: ${{ inputs.script }}
        run: php ${{ inputs.script }}
